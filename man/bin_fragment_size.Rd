% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin_fragment_size.R
\name{bin_fragment_size}
\alias{bin_fragment_size}
\title{Get histogram of fragment lengths from a bam file}
\usage{
bin_fragment_size(bam, mutations = NULL, tag = "", bin_size = 2,
  custom_bins = NULL, mutated_only = F, normalized = F,
  min_size = 1, max_size = 400, ...)
}
\arguments{
\item{bam}{path to bam file.}

\item{mutations}{An optional data frame with mutations. Must have the columns CHROM, POS, REF, ALT.}

\item{tag}{the RG tag if the bam has more than one samplee.}

\item{bin_size}{the width of the bin (breaks) of the histogram.}

\item{custom_bins}{A numeric vector for custom breaks to bin the histogram of fragment length. Over-rides bin_size.}

\item{mutated_only}{A logical, whether to return the counts for only mutated reads. The 'mutations' input should be given when TRUE.}

\item{normalized}{A logical, whether to normalize the counts to the total number of reads.}

\item{min_size}{Integer with the lowest fragment length.}

\item{max_size}{Integer with the highest fragment length.}

\item{...}{Other parameters passed to get_fragment_size.}
}
\value{
A data frame with one column corresponding to the sample name from the bam. 
Each row has the count of fragment lengths within the bin normalized by the total number of reads.
}
\description{
The function first extracts fragment length from a bam file then computes the histogram over defined bins. If normalized is TRUE, 
the counts per bin will be normalized to the total read counts. Optionally,
it can computes the histogram of fragment lengths only for mutated reads (confirmed ctDNA molecules).
}
\details{
Fragment length will extracted from the bam file according to the parameters passed to \code{\link{get_fragment_size}}, and histogram counts (optionally normalized to total counts)
are computed. Both equal histogram bins via bin_size and manually customized bins via custom_bins are supported. 

By setting mutated_only to true and using an input mutations, the function would bin only fragments that support mutation variant alleles.
}
\examples{
\dontrun{
data('targets',package = 'ctDNAtools')
data('mutations',package = 'ctDNAtools')
bamT1 <- system.file('extdata', 'T1.bam', package = 'ctDNAtools')

## basic usage
bin_fragment_size(bam = bamT1)

## with normalization
bin_fragment_size(bam = bamT1, normalized = TRUE)


## binning only mutated reads
bin_fragment_size(bam = bamT1, mutations = mutations, mutated_only = TRUE)
}
}
\seealso{
\code{\link{get_fragment_size}} \code{\link{analyze_fragmentation}} \code{\link{summarize_fragment_size}}
}
